/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
// A simple game that is the main character is a circle and the player needs to press the keys on the screen so that the circle increases and gains points.
const letterShowEl = document.querySelector('[data-key]');
const scoreEl = document.querySelector('[data-score]');
const scoreChangesEl = document.querySelector('[data-score-changes]');
const circleEl = document.querySelector('[data-circle]');
const startButtonEl = document.querySelector('[data-button-start]');
const stopButtonEl = document.querySelector('[data-button-stop]');
const restartButtonEl = document.querySelector('[data-button-restart]');
let counter = 100;
let isKeyPressed = false;
function letterShow() {
    const alphabet = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"];
    const letter = alphabet[Math.floor(Math.random() * alphabet.length)];
    letterShowEl.innerHTML = letter;
    scoreEl.textContent = counter.toString();
}
letterShow();
function bubbleResize(num) {
    circleEl.style.width = num * 1.5 + 'px';
    circleEl.style.height = num * 1.5 + 'px';
}
function getScores(min, max) {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min + 1)) + min;
}
function endGame() {
    if (counter <= 0) {
        scoreEl.textContent = 'You loose';
        clearInterval(interval);
    }
    else if (counter >= 200) {
        scoreEl.textContent = 'You win';
        clearInterval(interval);
    }
}
function letterChanger() {
    letterShow();
    isKeyPressed = false;
    document.addEventListener('keyup', gameplay);
    if (isKeyPressed === false) {
        const scoreDeducted = getScores(10, 15);
        counter -= scoreDeducted;
        scoreChangesEl.textContent = `- ${scoreDeducted}`;
    }
    scoreEl.textContent = counter.toString();
    endGame();
    bubbleResize(counter);
}
let interval = setInterval(letterChanger, 2000);
function gameplay(event) {
    const keyToPress = letterShowEl.textContent;
    const keyPressed = event.key.toUpperCase();
    if (keyPressed === keyToPress) {
        const scoreGiven = getScores(5, 10);
        counter += scoreGiven;
        scoreChangesEl.textContent = `+ ${scoreGiven}`;
        letterShow();
    }
    else {
        const scoreDeducted = getScores(20, 25);
        counter -= scoreDeducted;
        scoreChangesEl.textContent = `- ${scoreDeducted}`;
        letterShow();
    }
    scoreEl.textContent = counter.toString();
    isKeyPressed = true;
    clearInterval(interval);
    interval = setInterval(letterChanger, 2000);
    bubbleResize(counter);
    endGame();
}
document.addEventListener('keyup', gameplay);
function stopGame() {
    clearInterval(interval);
}
stopGame();
function startGame() {
    interval = setInterval(letterChanger, 2000);
}
function restartGame() {
    scoreChangesEl.textContent = '0';
    counter = 100;
    bubbleResize(134);
    letterShow();
    clearInterval(interval);
}
startButtonEl.addEventListener("click", startGame);
stopButtonEl.addEventListener('click', stopGame);
restartButtonEl.addEventListener('click', restartGame);

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,